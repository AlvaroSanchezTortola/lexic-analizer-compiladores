/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Main.java
 *
 * Created on 11/11/2010, 03:19:17 PM
 */

package py.com.fpuna.compiladores.gui.anlex;

import javax.swing.JTable;
import py.com.fpuna.compiladores.analizadorlexico.Analizador;
import py.com.fpuna.compiladores.analizadorlexico.Automata.TipoAutomata;
import py.com.fpuna.compiladores.analizadorlexico.algoritmos.Minimizacion;
import py.com.fpuna.compiladores.analizadorlexico.algoritmos.Subconjunto;
import py.com.fpuna.compiladores.analizadorlexico.algoritmos.Thompson;
import py.com.fpuna.compiladores.analizadorlexico.algoritmos.TransitionMatrix;
import py.com.fpuna.compiladores.exceptions.AutomataException;

/**
 *
 * @author lizj
 */
public class Main extends javax.swing.JFrame {

    /** Creates new form Main */
    public Main() {
        initComponents();
        labelErrores.setText(""); // el label de errores se limpia al iniciar
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        lblMensaje = new javax.swing.JLabel();
        pnlRegex = new javax.swing.JPanel();
        txtRegex = new javax.swing.JTextField();
        lblRegexHelp1 = new javax.swing.JLabel();
        pnlAlfabeto = new javax.swing.JPanel();
        txtAlfabeto = new javax.swing.JTextField();
        procesar = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtMensajes = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        labelErrores = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAFN = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAFD = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableAFDMin = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        lblAutores = new javax.swing.JLabel();

        jPopupMenu1.setName("jPopupMenu1"); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance().getContext().getResourceMap(Main.class);
        jLabel1.setBackground(resourceMap.getColor("jLabel1.background")); // NOI18N
        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(resourceMap.getIcon("jLabel1.icon")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        lblMensaje.setFont(resourceMap.getFont("lblMensaje.font")); // NOI18N
        lblMensaje.setForeground(resourceMap.getColor("lblMensaje.foreground")); // NOI18N
        lblMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMensaje.setText(resourceMap.getString("lblMensaje.text")); // NOI18N
        lblMensaje.setName("lblMensaje"); // NOI18N

        pnlRegex.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("pnlRegex.border.title"))); // NOI18N
        pnlRegex.setName("pnlRegex"); // NOI18N

        txtRegex.setName("txtRegex"); // NOI18N

        lblRegexHelp1.setForeground(resourceMap.getColor("lblRegexHelp1.foreground")); // NOI18N
        lblRegexHelp1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblRegexHelp1.setText(resourceMap.getString("lblRegexHelp1.text")); // NOI18N
        lblRegexHelp1.setName("lblRegexHelp1"); // NOI18N

        javax.swing.GroupLayout pnlRegexLayout = new javax.swing.GroupLayout(pnlRegex);
        pnlRegex.setLayout(pnlRegexLayout);
        pnlRegexLayout.setHorizontalGroup(
            pnlRegexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRegexLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRegexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblRegexHelp1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                    .addComponent(txtRegex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRegexLayout.setVerticalGroup(
            pnlRegexLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRegexLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblRegexHelp1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlAlfabeto.setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap.getString("pnlAlfabeto.border.title"))); // NOI18N
        pnlAlfabeto.setName("pnlAlfabeto"); // NOI18N

        txtAlfabeto.setToolTipText(resourceMap.getString("txtAlfabeto.toolTipText")); // NOI18N
        txtAlfabeto.setName("txtAlfabeto"); // NOI18N

        javax.swing.GroupLayout pnlAlfabetoLayout = new javax.swing.GroupLayout(pnlAlfabeto);
        pnlAlfabeto.setLayout(pnlAlfabetoLayout);
        pnlAlfabetoLayout.setHorizontalGroup(
            pnlAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlfabetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAlfabeto, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAlfabetoLayout.setVerticalGroup(
            pnlAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlfabetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAlfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        procesar.setText(resourceMap.getString("procesar.text")); // NOI18N
        procesar.setName("procesar"); // NOI18N
        procesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                procesarActionPerformed(evt);
            }
        });

        cancel.setText(resourceMap.getString("cancel.text")); // NOI18N
        cancel.setName("cancel"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtMensajes.setColumns(20);
        txtMensajes.setRows(5);
        txtMensajes.setName("txtMensajes"); // NOI18N
        jScrollPane1.setViewportView(txtMensajes);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        labelErrores.setText(resourceMap.getString("labelErrores.text")); // NOI18N
        labelErrores.setName("labelErrores"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblMensaje))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(172, 172, 172)
                                .addComponent(procesar, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cancel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(pnlAlfabeto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pnlRegex, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(47, 47, 47)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelErrores)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(labelErrores)
                        .addGap(59, 59, 59)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(pnlAlfabeto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(pnlRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(procesar)
                            .addComponent(cancel))))
                .addContainerGap())
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jPanel2.setName("jPanel2"); // NOI18N

        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane2.setName("jTabbedPane2"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTableAFN.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAFN.setName("jTableAFN"); // NOI18N
        jScrollPane2.setViewportView(jTableAFN);

        jTabbedPane2.addTab(resourceMap.getString("jScrollPane2.TabConstraints.tabTitle"), jScrollPane2); // NOI18N

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTableAFD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAFD.setName("jTableAFD"); // NOI18N
        jScrollPane3.setViewportView(jTableAFD);

        jTabbedPane2.addTab(resourceMap.getString("jScrollPane3.TabConstraints.tabTitle"), jScrollPane3); // NOI18N

        jScrollPane4.setName("jScrollPane4"); // NOI18N

        jTableAFDMin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableAFDMin.setName("jTableAFDMin"); // NOI18N
        jScrollPane4.setViewportView(jTableAFDMin);

        jTabbedPane2.addTab(resourceMap.getString("jScrollPane4.TabConstraints.tabTitle"), jScrollPane4); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        jPanel4.setName("jPanel4"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 703, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 343, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel4.TabConstraints.tabTitle"), jPanel4); // NOI18N

        lblAutores.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAutores.setText(resourceMap.getString("lblAutores.text")); // NOI18N
        lblAutores.setToolTipText(resourceMap.getString("lblAutores.toolTipText")); // NOI18N
        lblAutores.setName("lblAutores"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(301, Short.MAX_VALUE)
                .addComponent(lblAutores)
                .addGap(268, 268, 268))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 707, Short.MAX_VALUE)
                .addGap(67, 67, 67))
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(402, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(lblAutores)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void procesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_procesarActionPerformed
        // TODO add your handling code here:
        doLexicAnalisys();
    }//GEN-LAST:event_procesarActionPerformed

    private Thompson afn, afd, afdMin;
    private void doLexicAnalisys()
    {
        String regExp = txtRegex.getText();
        String alfabeto = txtAlfabeto.getText();
        boolean Errors = false;

        // Check entries
        if (regExp.compareTo("") == 0) {
            txtMensajes.append("# --> No se introdujo ninguna expresion regular\n");
            txtMensajes.append("# <--------------------------------------------\n");
            Errors = true;
        } else if (alfabeto.compareTo("") == 0) {
            txtMensajes.append("# --> No se introdujo ningun alfabeto\n");
            txtMensajes.append("# <-------------------------------------------\n");
            Errors = true;
        } else {

            bloquearControles();

            // Procesar la expresión regular y Generar el AFN, el AFD y el AFDMínimos
            txtMensajes.append("# --> Generando el AFN...\n");
            Analizador traductor = new Analizador(regExp, alfabeto);

            Errors = traductor.isHayErrores();
            // 1. Generar el AFN
            if (!Errors) {
                afn = traductor.traducir();
            }

            Errors = traductor.isHayErrores();

            // 1.2. Verificar si hubieron errores.
            if (Errors) {
                txtMensajes.append("# ERRORS: --> " + traductor.getErrMsg() + "\n");
                txtMensajes.append("# <-------------------------------------------\n");
            } else {

                txtMensajes.append("# --> AFN Generado con éxito!\n");

                // 2. Generar el AFD
                txtMensajes.append("# --> Generando el AFD...\n");
                Subconjunto subconjunto;
                TransitionMatrix transMatriz;

                try {
                    subconjunto = new Subconjunto(afn);
                    transMatriz = subconjunto.ejecutar();
                    this.afd = transMatriz.convertAutomata();

                    this.afd = Subconjunto.eliminar_estados_inalcanzables(afd);

                    this.afd.setAlpha(this.afn.getAlpha());
                    this.afd.setRegex(this.txtRegex.getText());
                    this.afd.tipoAutomata = TipoAutomata.AFD.ordinal();


                } catch (AutomataException ex) {
                    txtMensajes.append("# ERRORS: --> " + ex.getMessage() + "\n");
                    txtMensajes.append("# <-------------------------------------------\n");
                    Errors = true;
                } catch (Exception ex) {
                    txtMensajes.append("# ERRORS: --> " + ex.getMessage() + "\n");
                    txtMensajes.append("# <-------------------------------------------\n");
                    Errors = true;
                }

                if (!Errors) {
                    try {
                        txtMensajes.append("# --> AFD Generado con éxito!\n");

                        // 3. Generar el AFDMínimo
                        txtMensajes.append("# --> Generando el AFD Mínimo...\n");

                        Minimizacion minimize = new Minimizacion(afd);
                        this.afdMin = minimize.minimizar();
                        this.afdMin.eliminarIslas();

                        this.afdMin.setAlpha(this.afn.getAlpha());
                        this.afdMin.setRegex(this.txtRegex.getText());
                        this.afdMin.tipoAutomata = TipoAutomata.AFDMin.ordinal();

                        // 4. Poblar las tablas de la ventana principal
                        this.cargarTabla(jTableAFN, afn);
                        this.cargarTabla(jTableAFD, afd);
                        this.cargarTabla(jTableAFDMin, afdMin);
                    } catch (AutomataException ex) {
                        txtMensajes.append("# ERRORS: --> " + ex.getMessage() + "\n");
                        txtMensajes.append("# <-------------------------------------------\n");
                        Errors = true;
                    } catch (Exception ex) {
                        txtMensajes.append("# ERRORS: --> " + ex.getMessage() + "\n");
                        txtMensajes.append("# <-------------------------------------------\n");
                        Errors = true;
                    }
                }
            }

            this.habilitarControles();

            if (Errors) {
                this.bloquearValidacion();
                this.bloquearVistas();
            }
        }
    }

    public void cargarTabla(JTable Tabla, Thompson automata) {
        AutomataTable tmodel = new AutomataTable(automata);
        tmodel.arreglarObjetosNulos();
        Tabla.setModel(tmodel);
        this.resetTablaRenderer(Tabla);
    }

    private void bloquearControles() {
        this.bloquearValidacion();
        this.bloquearRegEx();
        this.bloquearRegExProcess();
        this.bloquearVistas();
        this.bloqearAlpha();
        this.bloquearDefaultAlpha();
    }

    private void habilitarControles() {
        this.habilitarValidacion();
        this.habilitarRegEx();
        this.habilitarRegExProcess();
        this.habilitarVistas();
        this.habilitarAlpha();
        this.habilitarDefaultAlpha();
    }

    private void habilitarRegEx() {
        this.txtRegex.setEnabled(true);
    }

    private void bloquearRegEx() {
        this.txtRegex.setEnabled(false);
    }

    private void habilitarRegExProcess() {
        this.procesar.setEnabled(true);
        //this.jMenuItemProcesarReGex.setEnabled(true);
    }

    private void bloquearRegExProcess() {
        this.procesar.setEnabled(false);
        //this.jMenuItemProcesarReGex.setEnabled(false);
    }

    private void habilitarAlpha() {
        txtAlfabeto.setEnabled(true);
    }

    private void bloqearAlpha() {
        txtAlfabeto.setEnabled(false);
    }

    private void habilitarVistas() {
//        this.viewAFNbtn.setEnabled(true);
//        this.viewAFDMinbtn.setEnabled(true);
//        this.viewAFDbtn.setEnabled(true);
//        this.jComboBoxGraph.setEnabled(true);
    }

    private void bloquearVistas() {
//        this.viewAFNbtn.setEnabled(false);
//        this.viewAFDMinbtn.setEnabled(false);
//        this.viewAFDbtn.setEnabled(false);
//        this.jComboBoxGraph.setEnabled(false);
    }

    private void habilitarValidacion() {
//        this.jTextValidate.setEnabled(true);
//        this.validateBtn.setEnabled(true);
//        this.jComboBoxValidation.setEnabled(true);
    }

    private void bloquearValidacion() {
//        this.jTextValidate.setEnabled(false);
//        this.validateBtn.setEnabled(false);
//        this.jComboBoxValidation.setEnabled(false);
//        this.afnSim = null;
//        this.afdSim = null;
//        this.afdMinSim = null;

    }

    private void habilitarDefaultAlpha() {
        //useSelectedAlphaBtn.setEnabled(true);
    }

    private void bloquearDefaultAlpha() {
       // useSelectedAlphaBtn.setEnabled(false);
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTable jTableAFD;
    private javax.swing.JTable jTableAFDMin;
    private javax.swing.JTable jTableAFN;
    private javax.swing.JLabel labelErrores;
    private javax.swing.JLabel lblAutores;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblRegexHelp1;
    private javax.swing.JPanel pnlAlfabeto;
    private javax.swing.JPanel pnlRegex;
    private javax.swing.JButton procesar;
    private javax.swing.JTextField txtAlfabeto;
    private javax.swing.JTextArea txtMensajes;
    private javax.swing.JTextField txtRegex;
    // End of variables declaration//GEN-END:variables

}
